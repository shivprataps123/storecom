{"ast":null,"code":"import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return function (event, info) {\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    if (visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Hover, isActive);\n    }\n\n    callback && callback(event, info);\n  };\n}\n\nfunction useHoverGesture(_ref) {\n  var onHoverStart = _ref.onHoverStart,\n      onHoverEnd = _ref.onHoverEnd,\n      whileHover = _ref.whileHover,\n      visualElement = _ref.visualElement;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined, {\n    passive: !onHoverStart\n  });\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined, {\n    passive: !onHoverEnd\n  });\n}\n\nexport { useHoverGesture };","map":{"version":3,"names":["isMouseEvent","AnimationType","usePointerEvent","isDragActive","createHoverEvent","visualElement","isActive","callback","event","info","animationState","setActive","Hover","useHoverGesture","onHoverStart","onHoverEnd","whileHover","undefined","passive"],"sources":["D:/Mystore/MyStore/storecom/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs"],"sourcesContent":["import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,aAA1B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;EACzD,OAAO,UAACC,KAAD,EAAQC,IAAR,EAAiB;IACpB,IAAI,CAACT,YAAY,CAACQ,KAAD,CAAb,IAAwBL,YAAY,EAAxC,EACI;IACJ;AACR;AACA;;IACQ,IAAIE,aAAa,CAACK,cAAlB,EAAkC;MAC9BL,aAAa,CAACK,cAAd,CAA6BC,SAA7B,CAAuCV,aAAa,CAACW,KAArD,EAA4DN,QAA5D;IACH;;IACDC,QAAQ,IAAIA,QAAQ,CAACC,KAAD,EAAQC,IAAR,CAApB;EACH,CAVD;AAWH;;AACD,SAASI,eAAT,OAAmF;EAAA,IAAxDC,YAAwD,QAAxDA,YAAwD;EAAA,IAA1CC,UAA0C,QAA1CA,UAA0C;EAAA,IAA9BC,UAA8B,QAA9BA,UAA8B;EAAA,IAAlBX,aAAkB,QAAlBA,aAAkB;EAC/EH,eAAe,CAACG,aAAD,EAAgB,cAAhB,EAAgCS,YAAY,IAAIE,UAAhB,GACzCZ,gBAAgB,CAACC,aAAD,EAAgB,IAAhB,EAAsBS,YAAtB,CADyB,GAEzCG,SAFS,EAEE;IAAEC,OAAO,EAAE,CAACJ;EAAZ,CAFF,CAAf;EAGAZ,eAAe,CAACG,aAAD,EAAgB,cAAhB,EAAgCU,UAAU,IAAIC,UAAd,GACzCZ,gBAAgB,CAACC,aAAD,EAAgB,KAAhB,EAAuBU,UAAvB,CADyB,GAEzCE,SAFS,EAEE;IAAEC,OAAO,EAAE,CAACH;EAAZ,CAFF,CAAf;AAGH;;AAED,SAASF,eAAT"},"metadata":{},"sourceType":"module"}