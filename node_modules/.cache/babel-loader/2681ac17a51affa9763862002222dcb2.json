{"ast":null,"code":"import _slicedToArray from\"D:/Mystore/MyStore/storecom/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useReducer}from\"react\";import reducer from'./reducer';// 1. create auth context and auth context provider for the entire application to have auth related data;\n// 2. maintain loading,error, auth status and token in the state; it goes without saying; you are expected to use useReducer as state management tool; (hint : different actions that you are expected to have can be login - loading, success, failure ..)\n// 3. send both state and dispatch values so that entire application has access to the state and dispatch function;\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/React.createContext();var initState={isLoading:false,isAuth:false,token:\"\",isError:false};var AuthContextProvider=function AuthContextProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state:state,dispatch:dispatch},children:children});};export default AuthContextProvider;","map":{"version":3,"names":["React","useReducer","reducer","AuthContext","createContext","initState","isLoading","isAuth","token","isError","AuthContextProvider","children","state","dispatch"],"sources":["D:/Mystore/MyStore/storecom/src/Context/AuthContext/AuthContextProvider.jsx"],"sourcesContent":["import React,{useReducer} from \"react\";\nimport reducer from './reducer'\n\n// 1. create auth context and auth context provider for the entire application to have auth related data;\n\n// 2. maintain loading,error, auth status and token in the state; it goes without saying; you are expected to use useReducer as state management tool; (hint : different actions that you are expected to have can be login - loading, success, failure ..)\n\n// 3. send both state and dispatch values so that entire application has access to the state and dispatch function;\nexport const AuthContext=React.createContext();\nconst initState={\n  isLoading:false,\n  isAuth:false,\n  token:\"\",\n  isError:false,\n}\nconst AuthContextProvider = ({children}) => {\n  const[state,dispatch]=useReducer(reducer,initState);\n  return (\n  <AuthContext.Provider value={{state,dispatch}}>\n    {children}\n  </AuthContext.Provider>\n  ) \n};\n\nexport default AuthContextProvider;\n"],"mappings":"iHAAA,MAAOA,MAAP,EAAcC,UAAd,KAA+B,OAA/B,CACA,MAAOC,QAAP,KAAoB,WAApB,CAEA;AAEA;AAEA;2CACA,MAAO,IAAMC,YAAW,cAACH,KAAK,CAACI,aAAN,EAAlB,CACP,GAAMC,UAAS,CAAC,CACdC,SAAS,CAAC,KADI,CAEdC,MAAM,CAAC,KAFO,CAGdC,KAAK,CAAC,EAHQ,CAIdC,OAAO,CAAC,KAJM,CAAhB,CAMA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,MAAgB,IAAdC,SAAc,MAAdA,QAAc,CAC1C,gBAAsBV,UAAU,CAACC,OAAD,CAASG,SAAT,CAAhC,4CAAMO,KAAN,iBAAYC,QAAZ,iBACA,mBACA,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACD,KAAK,CAALA,KAAD,CAAOC,QAAQ,CAARA,QAAP,CAA7B,UACGF,QADH,EADA,CAKD,CAPD,CASA,cAAeD,oBAAf"},"metadata":{},"sourceType":"module"}