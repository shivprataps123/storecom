{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mystore\\\\MyStore\\\\storecom\\\\src\\\\Components\\\\PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from \"../Context/AuthContext/AuthContextProvider\"; // 1. This particular component shall be a wrapper which based on authentication status either redirects user back to login page or renders the same page;\n// 2. if user is not logged in; user should be redirected to the login page;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    state\n  } = useContext(AuthContext);\n\n  if (!state.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(PrivateRoute, \"InUhF7dRXCUahyxBMI4beA9RUck=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useContext","Navigate","AuthContext","PrivateRoute","children","state","isAuth"],"sources":["D:/Mystore/MyStore/storecom/src/Components/PrivateRoute.jsx"],"sourcesContent":["import {useContext} from \"react\";\nimport {Navigate} from 'react-router-dom';\nimport { AuthContext } from \"../Context/AuthContext/AuthContextProvider\";\n\n// 1. This particular component shall be a wrapper which based on authentication status either redirects user back to login page or renders the same page;\n// 2. if user is not logged in; user should be redirected to the login page;\n\nconst PrivateRoute = ({children}) => {\n  const {state}=useContext(AuthContext);\n  if(!state.isAuth){\n    return <Navigate to='/login'/>\n  }\n  return children\n};\n\nexport default PrivateRoute;\n"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,4CAA5B,C,CAEA;AACA;;;;AAEA,MAAMC,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACnC,MAAM;IAACC;EAAD,IAAQL,UAAU,CAACE,WAAD,CAAxB;;EACA,IAAG,CAACG,KAAK,CAACC,MAAV,EAAiB;IACf,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,OAAOF,QAAP;AACD,CAND;;GAAMD,Y;;KAAAA,Y;AAQN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}