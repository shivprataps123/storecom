{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win 10\\\\Desktop\\\\rct_101_eval_4\\\\src\\\\Context\\\\CartContext\\\\CartContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport reducer from \"./reducer\"; // 1. create cart context and cart context provider for the entire application to have cart related data;\n// 2. maintain cart data in the state; it goes without saying; you are expected to use useReducer as state management tool; ( Hint : different actions you are expected to have are adding item to cart, removing item from cart, and checkout ..)\n// 3. send both state and dispatch values so that entire application has access to the state and dispatch function;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext();\nconst initState = [];\n\nconst CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: true,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartContextProvider, \"1V98u/UDHy2uklucCACGLcisRgc=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["React","useReducer","reducer","CartContext","createContext","initState","CartContextProvider","children","state","dispatch"],"sources":["C:/Users/win 10/Desktop/rct_101_eval_4/src/Context/CartContext/CartContextProvider.jsx"],"sourcesContent":["import React,{useReducer} from \"react\";\nimport reducer from \"./reducer\";\n// 1. create cart context and cart context provider for the entire application to have cart related data;\n\n// 2. maintain cart data in the state; it goes without saying; you are expected to use useReducer as state management tool; ( Hint : different actions you are expected to have are adding item to cart, removing item from cart, and checkout ..)\n\n// 3. send both state and dispatch values so that entire application has access to the state and dispatch function;\nexport const CartContext=React.createContext();\nconst initState=[];\n\nconst CartContextProvider = ({children}) => {\n  const[state,dispatch]=useReducer(reducer,initState);\n  return (\n    <CartContext.Provider value>\n      {children}\n    </CartContext.Provider>\n  )\n};\n\nexport default CartContextProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AAEA;AAEA;;;AACA,OAAO,MAAMC,WAAW,gBAACH,KAAK,CAACI,aAAN,EAAlB;AACP,MAAMC,SAAS,GAAC,EAAhB;;AAEA,MAAMC,mBAAmB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC1C,MAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBR,UAAU,CAACC,OAAD,EAASG,SAAT,CAAhC;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,MAA3B;IAAA,UACGE;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAPD;;GAAMD,mB;;KAAAA,mB;AASN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}