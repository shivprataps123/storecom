{"ast":null,"code":"import _slicedToArray from \"D:/Mystore/MyStore/storecom/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\nvar animations = {\n  animation: makeRenderlessComponent(function (_ref) {\n    var visualElement = _ref.visualElement,\n        animate = _ref.animate;\n\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      useEffect(function () {\n        return animate.subscribe(visualElement);\n      }, [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(function (props) {\n    var custom = props.custom,\n        visualElement = props.visualElement;\n\n    var _usePresence = usePresence(),\n        _usePresence2 = _slicedToArray(_usePresence, 2),\n        isPresent = _usePresence2[0],\n        safeToRemove = _usePresence2[1];\n\n    var presenceContext = useContext(PresenceContext);\n    useEffect(function () {\n      visualElement.isPresent = isPresent;\n      var animation = visualElement.animationState && visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n        custom: presenceContext && presenceContext.custom || custom\n      });\n\n      if (animation && !isPresent) {\n        animation.then(safeToRemove);\n      }\n    }, [isPresent]);\n  })\n};\nexport { animations };","map":{"version":3,"names":["useEffect","useContext","isAnimationControls","usePresence","PresenceContext","createAnimationState","AnimationType","makeRenderlessComponent","animations","animation","visualElement","animate","animationState","subscribe","exit","props","custom","isPresent","safeToRemove","presenceContext","setActive","Exit","then"],"sources":["D:/Mystore/MyStore/storecom/node_modules/framer-motion/dist/es/motion/features/animations.mjs"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,mBAAT,QAAoC,iDAApC;AACA,SAASC,WAAT,QAA4B,mDAA5B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,oBAAT,QAAqC,wCAArC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,uBAAT,QAAwC,wCAAxC;AAEA,IAAMC,UAAU,GAAG;EACfC,SAAS,EAAEF,uBAAuB,CAAC,gBAAgC;IAAA,IAA7BG,aAA6B,QAA7BA,aAA6B;IAAA,IAAdC,OAAc,QAAdA,OAAc;;IAC/D;AACR;AACA;AACA;AACA;IACQD,aAAa,CAACE,cAAd,KAAiCF,aAAa,CAACE,cAAd,GAA+BP,oBAAoB,CAACK,aAAD,CAApF;IACA;AACR;AACA;;IACQ,IAAIR,mBAAmB,CAACS,OAAD,CAAvB,EAAkC;MAC9BX,SAAS,CAAC;QAAA,OAAMW,OAAO,CAACE,SAAR,CAAkBH,aAAlB,CAAN;MAAA,CAAD,EAAyC,CAACC,OAAD,CAAzC,CAAT;IACH;EACJ,CAbiC,CADnB;EAefG,IAAI,EAAEP,uBAAuB,CAAC,UAACQ,KAAD,EAAW;IACrC,IAAQC,MAAR,GAAkCD,KAAlC,CAAQC,MAAR;IAAA,IAAgBN,aAAhB,GAAkCK,KAAlC,CAAgBL,aAAhB;;IACA,mBAAkCP,WAAW,EAA7C;IAAA;IAAA,IAAOc,SAAP;IAAA,IAAkBC,YAAlB;;IACA,IAAMC,eAAe,GAAGlB,UAAU,CAACG,eAAD,CAAlC;IACAJ,SAAS,CAAC,YAAM;MACZU,aAAa,CAACO,SAAd,GAA0BA,SAA1B;MACA,IAAMR,SAAS,GAAGC,aAAa,CAACE,cAAd,IACdF,aAAa,CAACE,cAAd,CAA6BQ,SAA7B,CAAuCd,aAAa,CAACe,IAArD,EAA2D,CAACJ,SAA5D,EAAuE;QACnED,MAAM,EAAGG,eAAe,IAAIA,eAAe,CAACH,MAApC,IACJA;MAF+D,CAAvE,CADJ;;MAKA,IAAIP,SAAS,IAAI,CAACQ,SAAlB,EAA6B;QACzBR,SAAS,CAACa,IAAV,CAAeJ,YAAf;MACH;IACJ,CAVQ,EAUN,CAACD,SAAD,CAVM,CAAT;EAWH,CAf4B;AAfd,CAAnB;AAiCA,SAAST,UAAT"},"metadata":{},"sourceType":"module"}